{
	"name": "provenance-code-extension",
	"displayName": "Provenance Blockchain WASM",
	"description": "Smart contract development tools for the Provenance blockchain.",
	"version": "0.0.1",
	"publisher": "Provenance Blockchain Foundation, LLC.",
	"author": {
		"name" : "Kory Herzinger",
  		"email" : "kherzinger@figure.com"
	},
	"icon": "media/icon.png",
	"engines": {
		"vscode": "^1.56.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"Provenance",
		"Blockchain",
		"WASM",
		"provwasm"
	],
	"activationEvents": [
		"*",
		"onCommand:provenance.build",
		"onCommand:provenance.chain-utils",
		"onCommand:provenance.compile",
		"onCommand:provenance.get-keys",
		"onCommand:provenance.instantiate-or-migrate",
		"onCommand:provenance.new-smart-contract",
		"onCommand:provenance.open-terminal",
		"onCommand:provenance.run",
		"onCommand:provenance.store"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "provenance.build",
				"title": "Provenance: Build & Upload Smart Contract"
			},
			{
				"command": "provenance.chain-utils",
				"title": "Provenance: Chain Utils"
			},
			{
				"command": "provenance.compile",
				"title": "Provenance: Compile Smart Contract"
			},
			{
				"command": "provenance.get-keys",
				"title": "Provenance: Get Keys"
			},
			{
				"command": "provenance.instantiate-or-migrate",
				"title": "Provenance: Instantiate or Migrate Smart Contract"
			},
			{
				"command": "provenance.new-smart-contract",
				"title": "Provenance: New Smart Contract"
			},
			{
				"command": "provenance.open-terminal",
				"title": "Provenance: Open Terminal"
			},
			{
				"command": "provenance.run",
				"title": "Provenance: Run Smart Contract"
			},
			{
				"command": "provenance.store",
				"title": "Provenance: Store Smart Contract"
			}
		],
		"configuration": {
			"title": "Provenance",
			"properties": {
				"provenance.adminAddress": {
					"type": "string",
					"default": "",
					"description": "Address of an admin (--admin)."
				},
				"provenance.broadcastMode": {
					"type": "string",
					"default": "block",
					"enum": [
						"sync",
						"async",
						"block"
					],
					"enumDescriptions": [
						"Broadcasts the transaction in sync mode.",
						"Broadcasts the transaction in async mode.",
						"Broadcasts the transaction in block mode."
					],
					"description": "Transaction broadcasting mode (--broadcast-mode)."
				},
				"provenance.chainId": {
					"type": "string",
					"default": "chain-local",
					"description": "The network chain ID (--chain-id)."
				},
				"provenance.clientBinary": {
					"type": "string",
					"default": "provenanced",
					"description": "The path to the provenanced client binary."
				},
				"provenance.defaultFees": {
					"type": "number",
					"default": 40000,
					"description": "Default fees to pay along with transaction in nhash (--fees)."
				},
				"provenance.gasLimit": {
					"type": "string",
					"default": "auto",
					"description": "Gas limit to set per-transaction. Set to 'auto' to calculate sufficient gas automatically (--gas)."
				},
				"provenance.gasAdjustment": {
					"type": "number",
					"default": 1.4,
					"description": "Adjustment factor to be multiplied against the estimate returned by the tx simulation (--gas-adjustment)."
				},
				"provenance.homeDir": {
					"type": "string",
					"default": "",
					"description": "Local directory for config and data. Defaults to '~/Library/Application Support/Provenance' (--home)."
				},
				"provenance.keyringBackend": {
					"type": "string",
					"default": "test",
					"enum": [
						"os",
						"file",
						"kwallet",
						"pass",
						"test",
						"memory"
					],
					"description": "The keyring's backend (--keyring-backend)."
				},
				"provenance.keyringDirectory": {
					"type": "string",
					"default": "",
					"description": "The client Keyring directory. If omitted, the default 'home' directory will be used (--keyring-dir)."
				},
				"provenance.nodeHostAddress": {
					"type": "string",
					"default": "",
					"description": "Node host address (tcp://<host>:<port>) to tendermint rpc interface for this chain (--node)."
				},
				"provenance.signingPrivateKey": {
					"type": "string",
					"default": "node0",
					"description": "Name or address of private key with which to sign transaction (--from)."
				},
				"provenance.testNet": {
					"type": "boolean",
					"default": true,
					"description": "Indicates this command should use the testnet configuration (--test-net)."
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "provenance",
					"title": "Provenance",
					"icon": "media/provenance.svg"
				}
			]
		},
		"views": {
			"provenance": [
				{
					"id": "project",
					"name": "Project"
				},
				{
					"id": "contract-history",
					"name": "Contract History"
				},
				{
					"id": "network",
					"name": "Network"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "project",
				"contents": "Provenance is a distributed, proof-of-stake blockchain designed for financial service industries. To learn more about Provenance [read our docs](https://docs.provenance.io/).\n\nStart developing a smart contract for Provenance from the template:\n[New Smart Contract](command:provenance.new-smart-contract)"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "npm-run-all compile:*",
		"watch": "npm-run-all -p watch:*",
		"compile:extension": "tsc -p ./",
		"compile:views": "npm-run-all compile:views:*",
		"compile:views:chain-view": "pushd src/webviews/chain-panel; webpack --mode development; popd",
		"compile:views:run-view": "pushd src/webviews/run-panel; webpack --mode development; popd",
		"watch:extension": "tsc -watch -p ./",
		"watch:views": "npm-run-all watch:views:*",
		"watch:views:chain-view": "pushd src/webviews/chain-panel; webpack --watch --mode development; popd",
		"watch:views:run-view": "pushd src/webviews/run-panel; webpack --watch --mode development; popd",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "npm run compile && node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/react": "^17.0.6",
		"@types/react-dom": "^17.0.5",
		"@types/uuid": "^8.3.0",
		"@types/vscode": "^1.56.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"css-loader": "^5.2.4",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"npm-run-all": "^4.1.5",
		"sass": "^1.32.13",
		"sass-loader": "^11.1.1",
		"style-loader": "^2.0.0",
		"ts-loader": "^9.2.1",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0",
		"webpack": "^5.37.1",
		"webpack-cli": "^4.7.0"
	},
	"dependencies": {
		"ace-builds": "^1.4.12",
		"bootstrap": "^4.6.0",
		"react": "^17.0.2",
		"react-ace": "^9.4.0",
		"react-bootstrap": "^1.6.0",
		"react-dom": "^17.0.2",
		"react-icons": "^4.2.0",
		"react-json-view": "^1.21.3",
		"react-redux": "^7.2.4",
		"rxjs": "^7.0.1",
		"simple-git": "^2.39.0",
		"uuid": "^8.3.2"
	}
}
